.navbar-parent {
  max-width: 100vw;
  position: absolute;
  top: 27px;
  left: 0;
  right: 0;
  z-index: 2;
}
.nav-item{
  position: relative;
  overflow: hidden;
  cursor: pointer;

  &:after {
    content: "";
    background: $mainWhite;
    display: block;
    position: absolute;
    top: 0;
    padding-top: 300%;
    padding-left: 350%;
    margin-left: -40px !important;
    margin-top: -150%;
    opacity: 0;
    transition: all 0.4s;
  }

  &:active:after {
    top: 100%;
    margin: 0;
    opacity: 1;
    transition: 0s;
  }
}
// Contents
//
// Navbar
// Navbar brand
// Navbar nav
// Navbar text
// Navbar divider
// Responsive navbar
// Navbar position
// Navbar themes

// Navbar
//
// Provide a static navbar from which we expand to create full-width, fixed, and
// other navbar variations.

.navbar {
  position: relative;
  display: flex;
  flex-wrap: wrap; // allow us to do the line break for collapsing content
  align-items: center;
  justify-content: space-between; // space out brand from logo
  padding: $navbar-padding-y $navbar-padding-x;

  // Because flex properties aren't inherited, we need to redeclare these first
  // few properties so that content nested within behave properly.
  > .container,
  > .container-fluid {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
  }
}

// Navbar brand
//
// Used for brand, project, or site names.

.navbar-brand {
  font-weight: bold;
  text-align: center;
  line-height: 1;
  display: inline-block;
  padding-top: $navbar-brand-padding-y;
  padding-bottom: $navbar-brand-padding-y;
  margin-right: $navbar-padding-x;
  @include font-size($navbar-brand-font-size);

  @include hover-focus {
    text-decoration: none;
  }

  @include padding(1.5rem 2.375rem);
}

// Navbar nav
//
// Custom navbar navigation (doesn't require `.nav`, but does make use of `.nav-link`).

.navbar-nav {
  display: flex;
  flex-direction: column; // cannot use `inherit` to get the `.navbar`s value
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;

  .nav-item {
    border: 1px solid transparent;
    min-width: 70px;
    min-height: 88px;
    @include hover-focus {
      background-color: $navbar-light-hover-color;
    }
    @include media-breakpoint-down(md) {
      border-left: 1px solid $gray-400;
    }
  }

  .nav-link {
    min-width: 44px;
    min-height: 64px;
    display: inline-block;
    padding: $btn-padding-y 0;
    span {
      vertical-align: bottom;
    }
  }
  .nav-link {
    padding: $btn-padding-y 0;
    display: inline-block;
    width: 100%;
    border-bottom: 3px solid;
    border-color: transparent;
    &--highlighted {
      border-color: white;
    }
  }

  .dropdown-menu {
    position: static;
    float: none;
  }
}

// Navbar text
//
//

.navbar-text {
  display: inline-block;
  padding-top: $nav-link-padding-y;
  padding-bottom: $nav-link-padding-y;
}

// Responsive navbar
//
// Custom styles for responsive collapsing and toggling of navbar contents.
// Powered by the collapse Bootstrap JavaScript plugin.

// When collapsed, prevent the toggleable navbar contents from appearing in
// the default flexbox row orientation. Requires the use of `flex-wrap: wrap`
// on the `.navbar` parent.
.navbar-collapse {
  flex-basis: 100%;
  flex-grow: 1;
  // For always expanded or extra full navbars, ensure content aligns itself
  // properly vertically. Can be easily overridden with flex utilities.
  align-items: center;
  text-align: center;
  @include media-breakpoint-down(md) {
    border-top: 1px solid $gray-400;
    border-bottom: 1px solid $gray-400;
  }
}

// Button for toggling the navbar when in its collapsed state
.navbar-toggler {
  padding: $navbar-toggler-padding-y $navbar-toggler-padding-x;
  @include font-size($navbar-toggler-font-size);
  line-height: 1;
  background-color: transparent; // remove default button style
  border: $border-width solid $mainWhite; // remove default button style
  @include border-radius($navbar-toggler-border-radius);

  @include hover-focus {
    text-decoration: none;
  }
}

// Keep as a separate element so folks can easily override it with another icon
// or image file as needed.
.navbar-toggler-icon {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 1.5em;
  height: 1.5em;
}

// Generate series of `.navbar-expand-*` responsive classes for configuring
// where your navbar collapses.
.navbar-expand {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    &#{$infix} {
      @include media-breakpoint-down($breakpoint) {
        > .container,
        > .container-fluid {
          padding-right: 0;
          padding-left: 0;
        }
      }

      @include media-breakpoint-up($next) {
        flex-flow: row nowrap;
        justify-content: flex-start;

        .navbar-nav {
          flex-direction: row;

          .dropdown-menu {
            position: absolute;
          }

          .nav-link {
            padding-right: $navbar-nav-link-padding-x;
            padding-left: $navbar-nav-link-padding-x;
          }
        }

        // For nesting containers, have to redeclare for alignment purposes
        > .container,
        > .container-fluid {
          flex-wrap: nowrap;
        }

        .navbar-collapse {
          display: flex !important; // stylelint-disable-line declaration-no-important

          // Changes flex-bases to auto because of an IE10 bug
          flex-basis: auto;
        }

        .navbar-toggler {
          display: none;
        }
      }
    }
  }
}

.navbar-nav {
  .nav-link {
    color: $navbar-light-color;

    @include hover-focus {
      color: $navbar-light-hover-color;
    }

    &.disabled {
      color: $navbar-light-disabled-color;
    }
  }

  .show > .nav-link,
  .active > .nav-link,
  .nav-link.show,
  .nav-link.active {
    color: $navbar-light-active-color;
  }
}

// Button for toggling the navbar when in its collapsed state
.navbar-toggler {
  padding: $navbar-toggler-padding-y $navbar-toggler-padding-x;
  margin: $navbar-padding-y $navbar-padding-x;
  @include font-size($navbar-toggler-font-size);
  line-height: 1;
  background-color: $mainBlue; // remove default button style
  border: $border-width solid transparent; // remove default button style
  @include border-radius($navbar-toggler-border-radius);

  @include hover-focus {
    text-decoration: none;
  }
  &-menu {
    position: absolute;
    display: block;
    width: 20px;
    height: 19px;
    z-index: 10;
    @mixin small {
      display: none;
    }
    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 20px;
      height: 3px;
      background-color: $mainWhite;
      transform-origin: 0 0;
      transition: transform 0.3s ease-out;
    }

    &-middle {
      position: absolute;
      top: 8px;
      left: 0;
      width: 20px;
      height: 3px;
      background-color: $mainWhite;
      transition: all 0.3s ease-out;
      transform-origin: 0 50%;
    }

    &::after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      width: 20px;
      height: 3px;
      background-color: $mainWhite;
      transform-origin: 0 100%;
      transition: transform 0.3s ease-out;
    }
    &--open {
      &::before {
        transform: rotate(45deg) scaleX(1.25);
      }

      .navbar-toggler-menu-middle {
        opacity: 0;
        transform: scaleX(0);
      }

      &::after {
        transform: rotate(-45deg) scaleX(1.25) translateY(1px);
      }
    }
  }
}
